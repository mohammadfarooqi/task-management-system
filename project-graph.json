{
  "graph": {
    "nodes": {
      "dashboard": {
        "name": "dashboard",
        "type": "app",
        "data": {
          "root": "apps/dashboard",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "apps/dashboard",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/tsconfig.app.json",
                "{projectRoot}/tsconfig.spec.json",
                "{projectRoot}/src/**/*.ts",
                "{projectRoot}/jest.config.ts",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.d.ts",
                "!{projectRoot}/src/test-setup.ts",
                "^production",
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{workspaceRoot}/dist/out-tsc/**/*.d.ts",
                "{workspaceRoot}/dist/out-tsc/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "@nx/eslint:lint",
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@angular-devkit/build-angular:browser",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/apps/dashboard",
                "index": "apps/dashboard/src/index.html",
                "main": "apps/dashboard/src/main.ts",
                "polyfills": [
                  "zone.js"
                ],
                "tsConfig": "apps/dashboard/tsconfig.app.json",
                "inlineStyleLanguage": "scss",
                "assets": [
                  {
                    "glob": "**/*",
                    "input": "apps/dashboard/public",
                    "output": "/"
                  }
                ],
                "styles": [
                  "apps/dashboard/src/styles.scss"
                ]
              },
              "configurations": {
                "production": {
                  "budgets": [
                    {
                      "type": "initial",
                      "maximumWarning": "500kb",
                      "maximumError": "1mb"
                    },
                    {
                      "type": "anyComponentStyle",
                      "maximumWarning": "4kb",
                      "maximumError": "8kb"
                    }
                  ],
                  "outputHashing": "all",
                  "fileReplacements": [
                    {
                      "replace": "apps/dashboard/src/environments/environment.ts",
                      "with": "apps/dashboard/src/environments/environment.prod.ts"
                    }
                  ]
                },
                "development": {
                  "buildOptimizer": false,
                  "optimization": false,
                  "vendorChunk": true,
                  "extractLicenses": false,
                  "sourceMap": true,
                  "namedChunks": true
                }
              },
              "defaultConfiguration": "production",
              "parallelism": true,
              "cache": true,
              "dependsOn": [
                "^build"
              ],
              "inputs": [
                "production",
                "^production"
              ]
            },
            "serve": {
              "continuous": true,
              "executor": "@angular-devkit/build-angular:dev-server",
              "configurations": {
                "production": {
                  "buildTarget": "dashboard:build:production"
                },
                "development": {
                  "buildTarget": "dashboard:build:development"
                }
              },
              "defaultConfiguration": "development",
              "options": {},
              "parallelism": true
            },
            "extract-i18n": {
              "executor": "@angular-devkit/build-angular:extract-i18n",
              "options": {
                "buildTarget": "dashboard:build"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/dashboard/jest.config.ts"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": []
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "dashboard:build",
                "spa": true
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "dashboard",
          "$schema": "../../node_modules/nx/schemas/project-schema.json",
          "prefix": "app",
          "sourceRoot": "apps/dashboard/src",
          "tags": [],
          "implicitDependencies": []
        }
      },
      "auth": {
        "name": "auth",
        "type": "lib",
        "data": {
          "root": "libs/auth",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "libs/auth",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "libs/auth",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "libs/auth/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": []
            }
          },
          "name": "auth",
          "tags": [
            "npm:private",
            "shared"
          ],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@task-management-system/auth",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "development": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": false
            }
          },
          "sourceRoot": "libs/auth/src",
          "implicitDependencies": []
        }
      },
      "@task-management-system/api": {
        "name": "@task-management-system/api",
        "type": "app",
        "data": {
          "root": "apps/api",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": [
                "^typecheck"
              ],
              "options": {
                "cwd": "apps/api",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "{projectRoot}/package.json",
                "{workspaceRoot}/tsconfig.base.json",
                "{projectRoot}/tsconfig.json",
                "{projectRoot}/tsconfig.app.json",
                "{projectRoot}/tsconfig.spec.json",
                "{projectRoot}/src/**/*.ts",
                "{projectRoot}/jest.config.ts",
                "{projectRoot}/src/**/*.test.ts",
                "{projectRoot}/src/**/*.spec.ts",
                "{projectRoot}/src/**/*.d.ts",
                "!{projectRoot}/eslint.config.js",
                "!{projectRoot}/eslint.config.cjs",
                "!{projectRoot}/eslint.config.mjs",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": [
                    "typescript"
                  ]
                }
              ],
              "outputs": [
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/**/*.d.ts.map",
                "{projectRoot}/dist/tsconfig.app.tsbuildinfo",
                "{workspaceRoot}/dist/out-tsc/**/*.d.ts",
                "{workspaceRoot}/dist/out-tsc/**/*.d.ts.map",
                "{workspaceRoot}/dist/out-tsc/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "metadata": {
                "technologies": [
                  "typescript"
                ],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "pnpm exec tsc --build --help",
                  "example": {
                    "args": [
                      "--force"
                    ]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "@nx/webpack:webpack",
              "outputs": [
                "{options.outputPath}"
              ],
              "options": {
                "outputPath": "dist/apps/api",
                "webpackConfig": "apps/api/webpack.config.js"
              },
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npx ts-node -r tsconfig-paths/register --transpile-only apps/api/src/main.ts"
              },
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "options": {
                "cwd": "apps/api",
                "args": [
                  "--node-env=production"
                ],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": [
                  "webpack"
                ],
                "description": "Starts Webpack dev server in production mode",
                "help": {
                  "command": "pnpm exec webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": [
                        "--client-progress",
                        "--history-api-fallback "
                      ]
                    }
                  }
                }
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "dependsOn": [
                "build"
              ],
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": [
                "@nx/js:typescript-sync"
              ],
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": [
                "^build"
              ],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": [
                "build-deps"
              ],
              "executor": "nx:run-commands",
              "options": {
                "command": "pnpm exec nx watch --projects @task-management-system/api --includeDependentProjects -- pnpm exec nx build-deps @task-management-system/api"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/api",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/eslint.config.mjs",
                "{projectRoot}/eslint.config.mjs",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": [
                    "eslint"
                  ]
                }
              ],
              "outputs": [
                "{options.outputFile}"
              ],
              "metadata": {
                "technologies": [
                  "eslint"
                ],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "pnpm exec eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "prune-lockfile": {
              "dependsOn": [
                "build"
              ],
              "cache": true,
              "executor": "@nx/js:prune-lockfile",
              "outputs": [
                "{workspaceRoot}/api/dist/package.json",
                "{workspaceRoot}/api/dist/pnpm-lock.yaml"
              ],
              "options": {
                "buildTarget": "build"
              },
              "configurations": {},
              "parallelism": true
            },
            "copy-workspace-modules": {
              "dependsOn": [
                "build"
              ],
              "cache": true,
              "outputs": [
                "{workspaceRoot}/api/dist/workspace_modules"
              ],
              "executor": "@nx/js:copy-workspace-modules",
              "options": {
                "buildTarget": "build"
              },
              "configurations": {},
              "parallelism": true
            },
            "prune": {
              "dependsOn": [
                "prune-lockfile",
                "copy-workspace-modules"
              ],
              "executor": "nx:noop",
              "configurations": {},
              "options": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/jest:jest",
              "outputs": [
                "{workspaceRoot}/coverage/{projectRoot}"
              ],
              "options": {
                "jestConfig": "apps/api/jest.config.ts",
                "passWithNoTests": true
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": []
            }
          },
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@task-management-system/api",
              "isInPackageManagerWorkspaces": false
            }
          },
          "name": "@task-management-system/api",
          "tags": [
            "npm:private",
            "backend"
          ],
          "sourceRoot": "apps/api/src",
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "dashboard": [],
      "auth": [],
      "@task-management-system/api": [
        {
          "source": "@task-management-system/api",
          "target": "auth",
          "type": "static"
        }
      ]
    }
  }
}